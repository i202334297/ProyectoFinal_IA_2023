package gui;

import java.awt.BorderLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.Toolkit;

public class DlgGenerarReportes extends JDialog implements ActionListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();
	private JLabel lblTipodeReporte;
	private JComboBox <String> cboTipoReporte;
	private JButton btnCerrar;
	private JScrollPane scrollPane;
	private JTextArea txtS;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		try {
			DlgGenerarReportes dialog = new DlgGenerarReportes();
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Create the dialog.
	 */
	public DlgGenerarReportes() {
		setResizable(false);
		setIconImage(Toolkit.getDefaultToolkit().getImage(DlgGenerarReportes.class.getResource("/imagen/DlgReportes.png")));
		setTitle("Ventas | Generar Reportes");
		setBounds(100, 100, 685, 335);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		
		lblTipodeReporte = new JLabel("Tipo de Reporte");
		lblTipodeReporte.setBounds(10, 21, 107, 14);
		contentPanel.add(lblTipodeReporte);
		
		cboTipoReporte = new JComboBox<String>();
		cboTipoReporte.addActionListener(this);
		cboTipoReporte.setModel(new DefaultComboBoxModel <String> 
							   (new String[] {"Ventas por modelo", 
									   "Comparaci\u00F3n de precios con el precio promedio", 
									   "Comparaci\u00F3n de cajas vendidas con la cantidad \u00F3ptima", 
									   "Estad\u00EDstica sobre el precio"}));
		cboTipoReporte.setBounds(143, 17, 343, 22);
		contentPanel.add(cboTipoReporte);
		
		btnCerrar = new JButton("Cerrar");
		btnCerrar.addActionListener(this);
		btnCerrar.setBounds(570, 17, 89, 23);
		contentPanel.add(btnCerrar);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 48, 649, 237);
		contentPanel.add(scrollPane);
		
		txtS = new JTextArea();
		scrollPane.setViewportView(txtS);
	}
	public void actionPerformed (ActionEvent e) {
		if (e.getSource()==cboTipoReporte)
			actionPerformedCboTipoReporte(e);
		if (e.getSource()==btnCerrar){
			actionPerformedBtnCerrar(e);
		}
	}
	protected void actionPerformedCboTipoReporte(ActionEvent e) {

	}

	
    void VentasPorModelo() {
        DecimalFormat decimalFormat = new DecimalFormat("###,###.##");
        txtS.setText("VENTAS POR MODELO\n\n");

        for (int i = 0; i < 5; i++) {
            txtS.append("Modelo : " + getModelo(i) + "\n");
            txtS.append("Cantidad de ventas : " + obtenerCantidadVentas(i) + "\n");
            txtS.append("Cantidad de cajas vendidas : " + obtenerCantidadCajasVendidas(i) + "\n");
            txtS.append("Importe total vendido : S/." + decimalFormat.format(obtenerImporteTotal(i)) + "\n");
            txtS.append("Aporte a la cuota diaria : " + obtenerAportePorcentual(i) + "%\n\n");
        }
    }
    void ComparacionPrecios() {
        DecimalFormat decimalFormat = new DecimalFormat("###,###.##");
        txtS.setText("COMPARACIÓN DE PRECIOS CON EL PRECIO PROMEDIO\n\n");

        for (int i = 0; i < 5; i++) {
            txtS.append("Modelo : " + getModelo(i) + "\n");
            txtS.append("Precio : S/." + decimalFormat.format(obtenerPrecio(i)) + "\n");
            txtS.append("Precio promedio : S/." + decimalFormat.format(obtenerPrecioPromedio(i)) + "\n");

            double comparacion = obtenerPrecio(i) - obtenerPrecioPromedio(i);
            String mensaje = comparacion > 0 ? "más que el promedio" :
                             comparacion < 0 ? "menos que el promedio" : "igual al promedio";

            txtS.append("Comparación : " + decimalFormat.format(Math.abs(comparacion)) + " " + mensaje + "\n\n");
        }
    }
    void ComparacionCajas() {
        txtS.setText("COMPARACIÓN DE CAJAS VENDIDAS CON LA CANTIDAD ÓPTIMA\n\n");

        for (int i = 0; i < 5; i++) {
            txtS.append("Modelo : " + getModelo(i) + "\n");
            txtS.append("Cantidad de cajas vendidas : " + obtenerCantidadCajasVendidas(i) + "\n");
            txtS.append("Cantidad óptima : " + getCantidadOptima() + "\n");

            int comparacion = obtenerCantidadCajasVendidas(i) - getCantidadOptima();
            String mensaje = comparacion > 0 ? "más que la cantidad óptima" :
                             comparacion < 0 ? "menos que la cantidad óptima" : "igual a la cantidad óptima";

            txtS.append("Comparación : " + Math.abs(comparacion) + " " + mensaje + "\n\n");
        }
    }
    void EstadisticasPrecio() {
        DecimalFormat decimalFormat = new DecimalFormat("###,###.##");
        txtS.setText("ESTADÍSTICA SOBRE EL PRECIO\n\n");

        double precioPromedio = calcularPrecioPromedio();
        double precioMayor = calcularPrecioMayor();
        double precioMenor = calcularPrecioMenor();

        txtS.append("Precio promedio : S/." + decimalFormat.format(precioPromedio) + "\n");
        txtS.append("Precio mayor : S/." + decimalFormat.format(precioMayor) + "\n");
        txtS.append("Precio menor : S/." + decimalFormat.format(precioMenor) + "\n");
    }
    
    
	protected void actionPerformedBtnCerrar (ActionEvent e) {
		
		dispose ();
	}
}
